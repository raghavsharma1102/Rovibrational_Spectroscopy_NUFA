(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    239254,       4333]
NotebookOptionsPosition[    237155,       4289]
NotebookOutlinePosition[    237584,       4306]
CellTagsIndexPosition[    237541,       4303]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Define", " ", "subscripted", " ", "symbols"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Notation`AutoLoadNotationPalette", "=", "False"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"<<", "Notation`"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Symbolize", "/@", 
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["D", "e"]},
        "NotationTemplateTag"], ",", 
       TemplateBox[{
         SubscriptBox["r", "e"]},
        "NotationTemplateTag"], ",", 
       TemplateBox[{
         SubscriptBox["r", "0"]},
        "NotationTemplateTag"], ",", 
       TemplateBox[{
         SubscriptBox["r", "f"]},
        "NotationTemplateTag"]}], "}"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.9172928804010525`*^9, 3.9172928885806046`*^9}, 
   3.9172932614295263`*^9, {3.917293532036169*^9, 3.917293532223772*^9}, {
   3.917293679766345*^9, 3.9172936888499393`*^9}, {3.917293733567549*^9, 
   3.9172938104863663`*^9}, {3.917293898599368*^9, 3.917293905340395*^9}, {
   3.9172940750524125`*^9, 3.9172940836151037`*^9}, {3.9172941147379303`*^9, 
   3.9172941256774535`*^9}, {3.917343267459055*^9, 3.9173432683642406`*^9}, 
   3.917343358781684*^9, {3.917343393863744*^9, 3.9173434135074863`*^9}, {
   3.917343826926547*^9, 3.917343829996189*^9}, {3.9173448652935085`*^9, 
   3.9173448687614183`*^9}, {3.917347332689843*^9, 3.917347335370041*^9}, {
   3.922449304112499*^9, 3.92244930510107*^9}, {3.923262012725542*^9, 
   3.9232620254320393`*^9}, {3.923421620307972*^9, 3.923421632200225*^9}, {
   3.923435770585448*^9, 3.9234357711820703`*^9}, {3.923508352269682*^9, 
   3.923508353063306*^9}, {3.9236783722486243`*^9, 3.9236784025532503`*^9}, {
   3.923680783815544*^9, 3.923680784712412*^9}, {3.9236808221314945`*^9, 
   3.9236808380414953`*^9}, {3.9236809038599024`*^9, 3.923680905298936*^9}, {
   3.9236809564457674`*^9, 3.9236809611271505`*^9}, {3.9236809940579386`*^9, 
   3.9236809961727734`*^9}, {3.9237824824441786`*^9, 3.923782499531665*^9}, {
   3.928064410309581*^9, 3.928064414732826*^9}, {3.928064753146592*^9, 
   3.928064774528571*^9}, {3.928066658802082*^9, 3.928066658958439*^9}, {
   3.9280667216544423`*^9, 3.9280667255110435`*^9}, {3.9280668164666457`*^9, 
   3.9280668585028267`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"05046e98-cdd7-4f8a-b695-025eeafee203"],

Cell[CellGroupData[{

Cell["Importing Data", "Subsubsection",
 CellChangeTimes->{{3.9242659650060177`*^9, 3.924265970201871*^9}, {
  3.9280826308303704`*^9, 
  3.9280826328027973`*^9}},ExpressionUUID->"0f08ef51-8ee7-4350-b31c-\
6f331f5da8c9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Importing", " ", "Dataset", " ", "of", " ", "Spectroscopic", " ", 
    "Constants"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"molecularData", "=", 
    RowBox[{"Import", "[", 
     RowBox[{"\"\<molecular_data.csv\>\"", ",", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<CSV\>\"", ",", "\"\<Dataset\>\""}], "}"}], ",", 
      RowBox[{"\"\<HeaderLines\>\"", "->", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{
  3.924259881231666*^9, {3.924260157414176*^9, 3.9242601847891197`*^9}, {
   3.925654222444585*^9, 3.925654224480656*^9}, {3.928078705214675*^9, 
   3.928078747757283*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"4cd66b59-d54b-4adf-8c44-207f63a98815"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "H2" -> <|"D_e" -> 4.7446, "r_e" -> 0.7416, "mu" -> 0.50391, "alpha" -> 
         1.440558|>, 
       "LiH" -> <|
        "D_e" -> 2.515287, "r_e" -> 1.5956, "mu" -> 0.8801221, "alpha" -> 
         1.7998368|>, 
       "HCl" -> <|
        "D_e" -> 4.61907, "r_e" -> 1.2746, "mu" -> 0.9801045, "alpha" -> 
         2.38057|>, 
       "CO" -> <|
        "D_e" -> 11.2256, "r_e" -> 1.1283, "mu" -> 6.8606719, "alpha" -> 
         2.59441|>|>, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, "D_e"} -> 
        1, {All, "r_e"} -> 1, {All, "mu"} -> 1, {All, "alpha"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[33.6], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "D_e" -> TypeSystem`PackageScope`AtomShape[60], "r_e" -> 
             TypeSystem`PackageScope`AtomShape[60], "mu" -> 
             TypeSystem`PackageScope`AtomShape[60], "alpha" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 4, {All}]]], 4, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"D_e", "r_e", "mu", "alpha"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 4], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, "D_e"} -> 
        1, {All, "r_e"} -> 1, {All, "mu"} -> 1, {All, "alpha"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[33.6], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "D_e" -> TypeSystem`PackageScope`AtomShape[60], "r_e" -> 
             TypeSystem`PackageScope`AtomShape[60], "mu" -> 
             TypeSystem`PackageScope`AtomShape[60], "alpha" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 4, {All}]]], 4, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"D_e", "r_e", "mu", "alpha"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 4], "Path" -> {}, "DisplayedRowCount" -> 4, 
     "DisplayedColumnCount" -> 4, "DataRowCount" -> 4, "DataColumnCount" -> 4,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["D_e", 
                  Style[
                  "D_e", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "D_e"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "D_e"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["r_e", 
                  Style[
                  "r_e", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "r_e"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "r_e"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["mu", 
                  Style[
                  "mu", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "mu"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "mu"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["alpha", 
                  Style[
                  "alpha", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "alpha"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "alpha"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["H2", 
                  Style[
                  "H2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["H2"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["H2"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.7446"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["H2"], 
                 Key["D_e"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7416"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["H2"], 
                 Key["r_e"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.50391"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["H2"], 
                 Key["mu"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.44056"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["H2"], 
                 Key["alpha"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["LiH", 
                  Style[
                  "LiH", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["LiH"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LiH"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.51529"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LiH"], 
                 Key["D_e"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.5956"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LiH"], 
                 Key["r_e"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.880122"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LiH"], 
                 Key["mu"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.79984"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LiH"], 
                 Key["alpha"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["HCl", 
                  Style[
                  "HCl", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["HCl"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HCl"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.61907"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HCl"], 
                 Key["D_e"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.2746"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HCl"], 
                 Key["r_e"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.980104"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HCl"], 
                 Key["mu"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.38057"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HCl"], 
                 Key["alpha"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["CO", 
                  Style[
                  "CO", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["CO"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["CO"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["11.2256"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["CO"], 
                 Key["D_e"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.1283"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["CO"], 
                 Key["r_e"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.86067"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["CO"], 
                 Key["mu"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.59441"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["CO"], 
                 Key["alpha"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{314.6, {73.13403328722343, 78.86596671277657}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{314.6, {73.13403328722343, 78.86596671277657}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9280792185613947`*^9, 3.9280802979934044`*^9, 
  3.928081520945964*^9, 3.92814206828331*^9, 3.9281460283837495`*^9, 
  3.9281472846122503`*^9, 3.9282583479073224`*^9, 3.9283321934052315`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"4b0852f7-3e22-438f-9a7c-99b5aa759b84"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Parameters", "Subsubsection",
 CellChangeTimes->{{3.9242659650060177`*^9, 3.924265970201871*^9}, {
  3.9280826308303704`*^9, 3.9280826328027973`*^9}, {3.928141945156766*^9, 
  3.9281419500990844`*^9}, {3.928142008840787*^9, 
  3.928142010893966*^9}},ExpressionUUID->"13089225-7860-498e-aeb0-\
e76dba1e1b2e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Molecular", " ", "Constants"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"molecule", " ", "=", " ", "\"\<H2\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["D", "e"], ",", 
       SubscriptBox["r", "e"], ",", "\[Mu]", ",", "\[Alpha]"}], "}"}], "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<D_e\>\"", ",", "\"\<r_e\>\"", ",", "\"\<mu\>\"", ",", 
        "\"\<alpha\>\""}], "}"}], "/.", 
      RowBox[{"Normal", "[", 
       RowBox[{"molecularData", "[", "molecule", "]"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Mu]", "=", 
     RowBox[{"\[Mu]", "*", "931.49410372", "*", 
      SuperscriptBox["10", "6"]}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"amu", " ", "to", " ", 
     RowBox[{"eV", "/", 
      SuperscriptBox["c", "2"]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[HBar]", "=", "1973.269804"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[ScriptL]", " ", "=", " ", "25"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["r", "0"], " ", "=", "0.01"}], ";", " ", 
    RowBox[{
     SubscriptBox["r", "f"], "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gridPoints", " ", "=", " ", "2000"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.928141989552226*^9, 3.9281419899517813`*^9}, {
   3.9281420954961605`*^9, 3.9281421100426455`*^9}, {3.9281421673116074`*^9, 
   3.9281421694058886`*^9}, {3.9281422353692102`*^9, 
   3.9281422363888288`*^9}, {3.9281422683706493`*^9, 
   3.9281422967942877`*^9}, {3.9281463260674925`*^9, 3.928146339012111*^9}, {
   3.9281463748740325`*^9, 3.9281463802982345`*^9}, {3.9281464807354317`*^9, 
   3.9281465278809824`*^9}, {3.928146586065513*^9, 3.928146619642394*^9}, {
   3.9281467439250402`*^9, 3.9281467727358265`*^9}, {3.928147095786389*^9, 
   3.9281470958855305`*^9}, {3.9281474114300117`*^9, 3.9281474115657177`*^9}, 
   3.9282583388809824`*^9, {3.9282583861779013`*^9, 3.928258386466298*^9}, {
   3.928258716126502*^9, 3.928258721526256*^9}, {3.928332203775489*^9, 
   3.928332204077381*^9}, {3.9283323657093334`*^9, 3.92833236915718*^9}, {
   3.9283329384464808`*^9, 3.9283329395124655`*^9}, {3.928333177893461*^9, 
   3.9283331783997364`*^9}, {3.928333276637513*^9, 3.9283332768049994`*^9}, {
   3.9283333527674737`*^9, 3.9283334921581855`*^9}, {3.928333545551277*^9, 
   3.9283335456564307`*^9}, {3.928333579486159*^9, 3.928333589310892*^9}, {
   3.9283336717837534`*^9, 3.9283337122383137`*^9}, {3.9283337578451123`*^9, 
   3.9283337784191017`*^9}, {3.928335572686653*^9, 3.9283355728128524`*^9}, {
   3.928335612258599*^9, 3.928335612350354*^9}, {3.928335695700446*^9, 
   3.9283357110558915`*^9}, {3.9283357932488723`*^9, 3.928335793345216*^9}, {
   3.9283358417962947`*^9, 3.9283358419275136`*^9}, {3.9283359159873285`*^9, 
   3.928335926906723*^9}, {3.92833598244851*^9, 3.9283359825565324`*^9}, {
   3.9283360413490143`*^9, 3.928336041443881*^9}, {3.928336089043503*^9, 
   3.9283360926579514`*^9}, {3.928336218169038*^9, 3.928336218304077*^9}, {
   3.928336262506653*^9, 3.9283362627527156`*^9}, {3.928336498219613*^9, 
   3.9283364985827484`*^9}, {3.92833655862988*^9, 3.9283365639035473`*^9}, {
   3.928336598015525*^9, 3.9283366613293047`*^9}, {3.9283367456025553`*^9, 
   3.9283367497492757`*^9}, {3.9283367970216246`*^9, 3.928336849144491*^9}, {
   3.9283368978226037`*^9, 3.9283368979874353`*^9}, {3.9283369507004833`*^9, 
   3.9283369509444447`*^9}},
 CellLabel->
  "In[1135]:=",ExpressionUUID->"faa084e2-7b85-483b-938a-0df5767655c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Finite Difference Method", "Subsubsection",
 CellChangeTimes->{{3.9242659650060177`*^9, 3.924265970201871*^9}, {
  3.9280826308303704`*^9, 3.9280826328027973`*^9}, {3.928141945156766*^9, 
  3.9281419500990844`*^9}, {3.928142131352398*^9, 
  3.9281421328342237`*^9}},ExpressionUUID->"bf0d1a65-e051-4880-8f86-\
c25c869d336b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Discretize", " ", "r"}], "-", "grid"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"step", " ", "=", 
     FractionBox[
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["r", "f"], "-", 
        SubscriptBox["r", "0"]}], ")"}], "gridPoints"]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rVals", " ", "=", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{"#", "&"}], ",", "gridPoints", ",", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["r", "0"], ",", 
         SubscriptBox["r", "f"]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Define", " ", "Potential", " ", "Function", " ", 
     RowBox[{"(", 
      RowBox[{"with", " ", "Centrifugal", " ", "Term"}], ")"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ModifiedMorse", "[", "r_", "]"}], ":=", 
     RowBox[{
      RowBox[{
       SubscriptBox["D", "e"], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "2"}], "\[Alpha]", 
         FractionBox[
          RowBox[{"(", 
           RowBox[{"r", "-", 
            SubscriptBox["r", "e"]}], ")"}], 
          SubscriptBox["r", "e"]]}]]}], "-", 
      RowBox[{"2", 
       SubscriptBox["D", "e"], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[Alpha]"}], 
         FractionBox[
          RowBox[{"(", 
           RowBox[{"r", "-", 
            SubscriptBox["r", "e"]}], ")"}], 
          SubscriptBox["r", "e"]]}]]}], "+", 
      RowBox[{
       FractionBox[
        SuperscriptBox["\[HBar]", "2"], 
        RowBox[{"2", "\[Mu]"}]], 
       FractionBox[
        RowBox[{"\[ScriptL]", 
         RowBox[{"(", 
          RowBox[{"\[ScriptL]", "+", "1"}], ")"}]}], 
        SuperscriptBox["r", "2"]]}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Potential", " ", "Energy", " ", "Matrix"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[ScriptCapitalV]", "=", 
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{"ModifiedMorse", "[", "rVals", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Kinetic", " ", "Energy", " ", "Matrix"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[ScriptCapitalK]", "=", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["\[HBar]", "2"], 
        RowBox[{"2", "\[Mu]", " ", 
         SuperscriptBox["step", "2"]}]]}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"DiagonalMatrix", "[", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "gridPoints"}], "]"}], "]"}], "+", 
        RowBox[{"DiagonalMatrix", "[", 
         RowBox[{
          RowBox[{"ConstantArray", "[", 
           RowBox[{"1", ",", 
            RowBox[{"gridPoints", "-", "1"}]}], "]"}], ",", 
          RowBox[{"-", "1"}]}], "]"}], "+", 
        RowBox[{"DiagonalMatrix", "[", 
         RowBox[{
          RowBox[{"ConstantArray", "[", 
           RowBox[{"1", ",", 
            RowBox[{"gridPoints", "-", "1"}]}], "]"}], ",", "1"}], "]"}]}], 
       ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Hamiltonian", " ", "Matrix"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[ScriptCapitalH]", "=", 
     RowBox[{"\[ScriptCapitalK]", "+", "\[ScriptCapitalV]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Diagonalize", " ", "Hamiltonian", " ", "Matrix"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"energyVals", ",", "eigenFunctions"}], "}"}], " ", "=", 
     RowBox[{
      RowBox[{"Eigensystem", "[", "\[ScriptCapitalH]", "]"}], "//", 
      "Quiet"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Sort", " ", 
     RowBox[{"Eigenvalues", "/", "Eigenfunctions"}], " ", "by", " ", "Most", 
     " ", "Negative", " ", "Eigenvalues"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"energyPos", " ", "=", " ", 
     RowBox[{"Ordering", "[", "energyVals", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"energyVals", "=", 
     RowBox[{"energyVals", "[", 
      RowBox[{"[", "energyPos", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eigenFunctions", "=", 
     RowBox[{"eigenFunctions", "[", 
      RowBox[{"[", "energyPos", "]"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.9234408100550065`*^9, 3.9234408285675945`*^9}, {
   3.9234409434592824`*^9, 3.9234409503809247`*^9}, {3.923440995467108*^9, 
   3.923441004841682*^9}, {3.923441059221241*^9, 3.9234411611552153`*^9}, {
   3.923441278635081*^9, 3.923441278853825*^9}, 3.92344473627036*^9, {
   3.923533884574259*^9, 3.923533921196339*^9}, {3.923533973855496*^9, 
   3.923533977967231*^9}, {3.923534170902477*^9, 3.923534192484168*^9}, 
   3.923534926881073*^9, {3.9235357296640625`*^9, 3.9235357304739285`*^9}, {
   3.923535774865078*^9, 3.9235358020763664`*^9}, {3.9242523389199324`*^9, 
   3.9242523394697714`*^9}, {3.924260209135768*^9, 3.924260307226677*^9}, {
   3.924260465128617*^9, 3.9242604895433064`*^9}, {3.924265931226222*^9, 
   3.924265973937561*^9}, {3.924266381490103*^9, 3.9242663825432796`*^9}, {
   3.9242664653275537`*^9, 3.9242664654994183`*^9}, {3.925915146466716*^9, 
   3.9259151472195444`*^9}, {3.9259161419836593`*^9, 3.925916142592925*^9}, {
   3.928065575764434*^9, 3.928065577140132*^9}, {3.928075719577813*^9, 
   3.9280757203402104`*^9}, {3.9280757546862507`*^9, 3.928075756372055*^9}, {
   3.9280758327361226`*^9, 3.928075833886611*^9}, {3.928075870861781*^9, 
   3.928075871127291*^9}, {3.928079206001873*^9, 3.928079229726244*^9}, {
   3.9280808265954027`*^9, 3.9280808413244953`*^9}, {3.928080878488531*^9, 
   3.928080908166991*^9}, {3.928080961298904*^9, 3.928080977236384*^9}, {
   3.92808103012718*^9, 3.92808109677343*^9}, 3.928081464071205*^9, {
   3.9280815325141*^9, 3.928081575057818*^9}, {3.9281307419018726`*^9, 
   3.9281307463217487`*^9}, 3.9281413820964603`*^9, 3.92814188808489*^9, {
   3.9281419412562017`*^9, 3.928141941444738*^9}, {3.9281419881340094`*^9, 
   3.928141992987751*^9}, {3.928142024854881*^9, 3.928142030718422*^9}, {
   3.9281421481067247`*^9, 3.9281421908755703`*^9}, {3.9283323395859528`*^9, 
   3.9283323616278777`*^9}, 3.928333175355958*^9, 3.9283332657425995`*^9},
 CellLabel->
  "In[1142]:=",ExpressionUUID->"c9744696-f9be-4cf1-9263-aa2904d074f6"]
}, Closed]],

Cell[CellGroupData[{

Cell["Eigenvalues and Eigenfunctions", "Subsubsection",
 CellChangeTimes->{{3.9242659650060177`*^9, 3.924265970201871*^9}, {
  3.9280826308303704`*^9, 3.9280826328027973`*^9}, {3.928141945156766*^9, 
  3.9281419500990844`*^9}, {3.928142054452668*^9, 
  3.9281420594837623`*^9}},ExpressionUUID->"21f7d04c-37a1-4426-b520-\
01eb62a7d727"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NumberForm", "[", 
     RowBox[{
      RowBox[{"-", "#"}], ",", 
      RowBox[{"{", 
       RowBox[{"20", ",", "8"}], "}"}]}], "]"}], "&"}], "/@", " ", 
   RowBox[{"energyVals", "[", 
    RowBox[{"[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4", ",", "6"}], "}"}], "]"}], "]"}]}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.925915977207673*^9, 3.9259160025705976`*^9}, {
   3.928066761495015*^9, 3.9280667914341507`*^9}, {3.928066823309843*^9, 
   3.9280668234662695`*^9}, {3.9280668807968884`*^9, 
   3.9280668809062505`*^9}, {3.928066981721305*^9, 3.928066983923003*^9}, {
   3.92814220153933*^9, 3.9281422040776253`*^9}, {3.928145927703668*^9, 
   3.9281459341838126`*^9}, {3.9281460117248106`*^9, 
   3.9281460137935257`*^9}, {3.9281462004989605`*^9, 
   3.9281462429063387`*^9}, {3.928146283582182*^9, 3.928146313046789*^9}, 
   3.928146569247721*^9, 3.928146675439923*^9, {3.928147151288476*^9, 
   3.9281472070675716`*^9}, {3.9281472714718013`*^9, 3.928147273956671*^9}, {
   3.9281473214778314`*^9, 3.9281473282603407`*^9}, {3.9281473748182497`*^9, 
   3.928147459566492*^9}, {3.9282583434486127`*^9, 3.9282583444327273`*^9}, {
   3.928258391818005*^9, 3.928258393894663*^9}, {3.9283322231376405`*^9, 
   3.9283322922829742`*^9}, {3.92833295765034*^9, 3.9283330335008554`*^9}, {
   3.9283332902355075`*^9, 3.9283332950124593`*^9}, {3.9283335967067146`*^9, 
   3.9283335979532833`*^9}, {3.928335457573819*^9, 3.9283354803867674`*^9}, {
   3.92833552371266*^9, 3.928335534854311*^9}, {3.9283364009442816`*^9, 
   3.9283364035820646`*^9}, {3.9283365203099055`*^9, 3.9283365274298124`*^9}},
 CellLabel->
  "In[1152]:=",ExpressionUUID->"b45c0b8c-d633-41f2-839e-ef7421e2130e"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox[
       InterpretationBox[
        StyleBox["\<\"1.16592194\"\>",
         ShowStringCharacters->False],
        1.1659219378009769`,
        AutoDelete->True],
       NumberForm[#, {20, 8}]& ]},
     {
      TagBox[
       InterpretationBox[
        StyleBox["\<\"0.34028050\"\>",
         ShowStringCharacters->False],
        0.34028049654377923`,
        AutoDelete->True],
       NumberForm[#, {20, 8}]& ]},
     {
      TagBox[
       InterpretationBox[
        StyleBox["\<\"-0.01980385\"\>",
         ShowStringCharacters->False],
        -0.019803849016529318`,
        AutoDelete->True],
       NumberForm[#, {20, 8}]& ]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.9281462255397367`*^9, 3.928146244206685*^9}, {
   3.9281462859220514`*^9, 3.928146313515994*^9}, {3.928146345529205*^9, 
   3.9281463929918413`*^9}, {3.92814648692493*^9, 3.928146678534401*^9}, {
   3.9281467515745993`*^9, 3.9281467776622567`*^9}, 3.928147119156433*^9, {
   3.9281471534279027`*^9, 3.9281472078475857`*^9}, {3.9281472742578373`*^9, 
   3.928147285036523*^9}, {3.928147329067844*^9, 3.9281473314343815`*^9}, {
   3.9281474024979258`*^9, 3.9281474718675203`*^9}, 3.9282583562058563`*^9, {
   3.928258398787608*^9, 3.9282584050243044`*^9}, 3.9282587283580575`*^9, {
   3.928332193892355*^9, 3.9283322095535345`*^9}, {3.92833225963553*^9, 
   3.9283322932173986`*^9}, 3.928332933221946*^9, {3.9283329659624796`*^9, 
   3.9283330338618655`*^9}, {3.92833329054457*^9, 3.9283332953719783`*^9}, {
   3.9283333363473616`*^9, 3.928333360939231*^9}, {3.9283333976035347`*^9, 
   3.9283334747843065`*^9}, 3.9283335526320195`*^9, {3.92833358416045*^9, 
   3.9283335983488836`*^9}, {3.9283336783845005`*^9, 
   3.9283337165717597`*^9}, {3.928333773180808*^9, 3.928333783820324*^9}, 
   3.92833539536681*^9, {3.928335459045492*^9, 3.928335480697008*^9}, {
   3.9283355306292477`*^9, 3.928335535154072*^9}, 3.928335577819575*^9, 
   3.928335627465637*^9, {3.9283357006461973`*^9, 3.928335717914912*^9}, 
   3.9283357975355415`*^9, {3.9283358459723673`*^9, 3.928335849807974*^9}, {
   3.9283359239628696`*^9, 3.928335932117728*^9}, 3.928336000785574*^9, 
   3.9283360460670433`*^9, 3.9283360981016083`*^9, 3.9283362234656167`*^9, 
   3.9283362676620827`*^9, 3.9283364088250074`*^9, {3.928336507087064*^9, 
   3.928336527717984*^9}, {3.9283365785104656`*^9, 3.9283366655040445`*^9}, {
   3.928336780787321*^9, 3.928336902454856*^9}, 3.928336956165256*^9},
 CellLabel->
  "Out[1152]//TableForm=",ExpressionUUID->"34c832ce-8f74-4c92-a03e-\
3614a09570ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{"rVals", ",", 
      RowBox[{"eigenFunctions", "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], "}"}], "]"}], ",", " ", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "5"}], "}"}], ",", "Full"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.928080280789833*^9, 3.9280802923632927`*^9}, {
  3.9280803314688244`*^9, 3.9280804691750393`*^9}, {3.9280806570212727`*^9, 
  3.928080672798588*^9}, {3.928080951122822*^9, 3.9280809513765564`*^9}, {
  3.9281422146049643`*^9, 3.928142243849347*^9}, {3.9281463512640157`*^9, 
  3.9281463574254065`*^9}, {3.9281465125817213`*^9, 3.9281465480556498`*^9}, {
  3.928258734200369*^9, 3.9282587343417654`*^9}, {3.9283333232505164`*^9, 
  3.9283333233212247`*^9}, {3.928333600183594*^9, 3.928333611039336*^9}, {
  3.928333703999921*^9, 3.928333730492797*^9}, {3.9283368831367927`*^9, 
  3.928336883306202*^9}},
 CellLabel->
  "In[1153]:=",ExpressionUUID->"b80852a0-65e2-409f-b484-3c4a94e633a5"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.006944444444444445], AbsoluteThickness[2], LineBox[CompressedData["
1:eJw8W3c8lt/7t/d4Hp6GiFREJaTMOtcpI5JRUUZURimzYafMyIjshozsTVbW
bVRGioykzChE9sz66fv6vT7PP8/r/brv+5z39b7OuK4zBE1sz5nTUFFRtTBS
Uf37d6Vknxpw8Qaq//+lz0gdpSl+/B+2Grn05Ilz+H/Yu1OAKSHq6X/42fsf
9/MLX/6Hu761ugyMxv+Hzc8dKRp1SvwPTzVETE8zpvyH751YPPg3Mu0/zPRG
z4JGOPM/HCZR+oqlMPs/zNkeZMuckPsf7ghGQUGjef/h5+qT6WTJ1//hK4xx
9RFOBf9h4VrtXzxVhf/h8fvUdC8Zi//D+fL5gru1Sv7DTgsmkBz55j98PJ/b
aH9v6X+Y1uatS7ZQ+X+4QdQ++rB1BXxyZfPzo8ovC/4pVFRUUAnq72uLH2SF
l+nGf2mTXyUgwubjvXjF7LLH2bVOffFVwGO01y1M712ZHdsL33jlalD/eOb2
2LaeMp2bdyNNR6sh2TCx6tPh2TLp+jNJQkE1cCf10/FnEUzlPMJCBcMStSC+
ONBf8ZS/fNVrrSatvRZCn9P7NPgfLu8b6Phs6fQWdoLHqMSocnkNZPeL8b2D
4rufjoyf0i9Pink4OUm8A5/2cg4tb6tyvxXj9TzT99Akdf9UpeuDckt9Gfa7
jHXQebnDZTfjk3LNYk4+6Yw6qDzg7XiLlFAuuWVk/5JmPRyy9ZbIas4vp9yp
kiudqQduKrmJdFRbvtASrXovsgE06yz1LQ3byrsO3bqI5BuBkPhavrRvsLw8
UO0aVW8j2G5kuS6lzZTH/ha0r/H4AOcuGBjT/Kau8FT96+Ut1AS/og0K22ZI
FebJraEqDU1guDv7wmicQIUqXUY8k/VHMAp8OVLHL1ZxwMQrt5H0CbKd7+7L
d5Sv4KgyJAILPkFzWBvn2ZpTFdM7j3zS1GuGaPlTXHFcuhXtrmw9pNVmGCOb
p+s5m1R8t5qxH9VqgbW37YqZtHYVTc+N3RrjW0BvtxTJ28G1orKx0TtjtgXI
To/iOs74VuQuSwcGKn8G4QWjk0shYRXxIq/CrKM+Q4WryuBDpbiK0IuczzVH
P0P+Nx8xrsb0Cu+HrgniCq1w3tA1vb+rsMK+cDiNFNQKR1WvxLGkVVdcHzqf
N93bClc8y5hGTzdV6HFXlbRKtEH7lMQ7W8cvFadPHqx67dkG12bjXO7lDlQo
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
hgqbRnYx7Wsuht/cuTF1TlT48gU3OtfXxdDwNKaS1osKWzmf8PYLL4YUgYA+
CKLCPR9sKHdvF4NPkhPVvSgqnAMy61c1isH0wDXBkngqTGEJkXUQKoYTeedP
zmVQ4aCPWwza/xbBLpkTphJFVJjPaS4g9mMRrJcf8raqosKXtja5/Y0pgu6T
fEmpjVRY0ivAgNGqCErrmd8PtVPh6CdylcMyRRCtufhrVx8VjmdLyiynLgKH
9iFGo1EqzF4865fcUAi6Bq0iT2epcKwaE8e74EKQ6ifUOtaosPzZ4lMyOoXw
v+mciRrXF9cE8m4rhMmxZwEaXNS4rjDMOfhrAXy85Zf5iI8a8/5KH8uJLoDM
RfuP74SpMYtc5Vr0xQLwdzOdoJakxsGB9+iubSkAC9p/AT41zqyaCJBsfQ0q
j5CEizI13jhio7vl8WvYy3nwbJEWNRYqFrmwX+010ETw3J7R3/yedX+RH+1r
GNjBGHbIjBofvjTYfKoiH4i4udc3bahxCK2oxH2HfIgR/tGe7ESNjXRiI0+I
54NrZvP8D09qvFsseCF5OA/0D1dsFQiixkF6vE41sXkgW5IuYxhFjeMnmp1T
LubBVhStFxVPjc0FfEItOPNgrtbHuS2DGv9gCA7bVrc5HqjdecZZRI3NTI4E
vLufC7nNV8rUq6jxBelrdZ7Sm+ODrma3byM1djE2z6vozgHr7wprte3UmNvj
+/7PZ3JA/aooP1UfNT55jyJ/qSIbRIe3wrFRapzbcqzY+VA2MFrTXXGapcal
Uvy8inFZ8HNm2r1gjRp30pQ+bOHKgrdOffFTjDT4DLfAB9mHmZCw3lRzkIsG
84XcvvXkbwa4e5cOWvDRYEemvbUTthlgzJJKlyRMg0UUlFtNf6XDsZAIoQEJ
Gvw8Yt2Dxjgddmz1UtmpQIObanmCv39Jg+Xndtf1lWnwL+4X0evaadApaOwX
oUWDlz/fFHFpSoXCFPW0z/o0eJp/rsxQLRXCxOQa2c1osOiezqacuhS49Vp4
TM2GBvd0POzyOJUC2nIUtodONFht9Id1d30yHCKoN2dQGlxUWXOgQT0Z2JQn
NdYDaTB/pE2bdksS/G7stpGPosGJzrRnXC8kQb12Y7BDPA0m5VZmaPUmQvKX
4tz8DBq8tV4Mt19PBJ9LSZ8nCmlw3hMcyTH7Ckx/hM7sr6LB0S/kPWndX8EJ
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
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
          Annotation[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1:eJw8W3c8lt/7t/d4Hp6GiFREJaTMOtcpI5JRUUZURimzYafMyIjshozsTVbW
bVRGioykzChE9sz66fv6vT7PP8/r/brv+5z39b7OuK4zBE1sz5nTUFFRtTBS
Uf37d6Vknxpw8Qaq//+lz0gdpSl+/B+2Grn05Ilz+H/Yu1OAKSHq6X/42fsf
9/MLX/6Hu761ugyMxv+Hzc8dKRp1SvwPTzVETE8zpvyH751YPPg3Mu0/zPRG
z4JGOPM/HCZR+oqlMPs/zNkeZMuckPsf7ghGQUGjef/h5+qT6WTJ1//hK4xx
9RFOBf9h4VrtXzxVhf/h8fvUdC8Zi//D+fL5gru1Sv7DTgsmkBz55j98PJ/b
aH9v6X+Y1uatS7ZQ+X+4QdQ++rB1BXxyZfPzo8ovC/4pVFRUUAnq72uLH2SF
l+nGf2mTXyUgwubjvXjF7LLH2bVOffFVwGO01y1M712ZHdsL33jlalD/eOb2
2LaeMp2bdyNNR6sh2TCx6tPh2TLp+jNJQkE1cCf10/FnEUzlPMJCBcMStSC+
ONBf8ZS/fNVrrSatvRZCn9P7NPgfLu8b6Phs6fQWdoLHqMSocnkNZPeL8b2D
4rufjoyf0i9Pink4OUm8A5/2cg4tb6tyvxXj9TzT99Akdf9UpeuDckt9Gfa7
jHXQebnDZTfjk3LNYk4+6Yw6qDzg7XiLlFAuuWVk/5JmPRyy9ZbIas4vp9yp
kiudqQduKrmJdFRbvtASrXovsgE06yz1LQ3byrsO3bqI5BuBkPhavrRvsLw8
UO0aVW8j2G5kuS6lzZTH/ha0r/H4AOcuGBjT/Kau8FT96+Ut1AS/og0K22ZI
FebJraEqDU1guDv7wmicQIUqXUY8k/VHMAp8OVLHL1ZxwMQrt5H0CbKd7+7L
d5Sv4KgyJAILPkFzWBvn2ZpTFdM7j3zS1GuGaPlTXHFcuhXtrmw9pNVmGCOb
p+s5m1R8t5qxH9VqgbW37YqZtHYVTc+N3RrjW0BvtxTJ28G1orKx0TtjtgXI
To/iOs74VuQuSwcGKn8G4QWjk0shYRXxIq/CrKM+Q4WryuBDpbiK0IuczzVH
P0P+Nx8xrsb0Cu+HrgniCq1w3tA1vb+rsMK+cDiNFNQKR1WvxLGkVVdcHzqf
N93bClc8y5hGTzdV6HFXlbRKtEH7lMQ7W8cvFadPHqx67dkG12bjXO7lDlQo
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
hgqbRnYx7Wsuht/cuTF1TlT48gU3OtfXxdDwNKaS1osKWzmf8PYLL4YUgYA+
CKLCPR9sKHdvF4NPkhPVvSgqnAMy61c1isH0wDXBkngqTGEJkXUQKoYTeedP
zmVQ4aCPWwza/xbBLpkTphJFVJjPaS4g9mMRrJcf8raqosKXtja5/Y0pgu6T
fEmpjVRY0ivAgNGqCErrmd8PtVPh6CdylcMyRRCtufhrVx8VjmdLyiynLgKH
9iFGo1EqzF4865fcUAi6Bq0iT2epcKwaE8e74EKQ6ifUOtaosPzZ4lMyOoXw
v+mciRrXF9cE8m4rhMmxZwEaXNS4rjDMOfhrAXy85Zf5iI8a8/5KH8uJLoDM
RfuP74SpMYtc5Vr0xQLwdzOdoJakxsGB9+iubSkAC9p/AT41zqyaCJBsfQ0q
j5CEizI13jhio7vl8WvYy3nwbJEWNRYqFrmwX+010ETw3J7R3/yedX+RH+1r
GNjBGHbIjBofvjTYfKoiH4i4udc3bahxCK2oxH2HfIgR/tGe7ESNjXRiI0+I
54NrZvP8D09qvFsseCF5OA/0D1dsFQiixkF6vE41sXkgW5IuYxhFjeMnmp1T
LubBVhStFxVPjc0FfEItOPNgrtbHuS2DGv9gCA7bVrc5HqjdecZZRI3NTI4E
vLufC7nNV8rUq6jxBelrdZ7Sm+ODrma3byM1djE2z6vozgHr7wprte3UmNvj
+/7PZ3JA/aooP1UfNT55jyJ/qSIbRIe3wrFRapzbcqzY+VA2MFrTXXGapcal
Uvy8inFZ8HNm2r1gjRp30pQ+bOHKgrdOffFTjDT4DLfAB9mHmZCw3lRzkIsG
84XcvvXkbwa4e5cOWvDRYEemvbUTthlgzJJKlyRMg0UUlFtNf6XDsZAIoQEJ
Gvw8Yt2Dxjgddmz1UtmpQIObanmCv39Jg+Xndtf1lWnwL+4X0evaadApaOwX
oUWDlz/fFHFpSoXCFPW0z/o0eJp/rsxQLRXCxOQa2c1osOiezqacuhS49Vp4
TM2GBvd0POzyOJUC2nIUtodONFht9Id1d30yHCKoN2dQGlxUWXOgQT0Z2JQn
NdYDaTB/pE2bdksS/G7stpGPosGJzrRnXC8kQb12Y7BDPA0m5VZmaPUmQvKX
4tz8DBq8tV4Mt19PBJ9LSZ8nCmlw3hMcyTH7Ckx/hM7sr6LB0S/kPWndX8EJ
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
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0., 5.}, {-0.06821669207947645, 
            0.09437655044024709}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0., 5.}, {-0.06821669207947645, 
           0.09437655044024709}}, "Frame" -> {{False, False}, {False, False}},
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
          "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
          GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListLinePlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJw8W3c8lt/7t/d4Hp6GiFREJaTMOtcpI5JRUUZURimzYafMyIjshozsTVbW
bVRGioykzChE9sz66fv6vT7PP8/r/brv+5z39b7OuK4zBE1sz5nTUFFRtTBS
Uf37d6Vknxpw8Qaq//+lz0gdpSl+/B+2Grn05Ilz+H/Yu1OAKSHq6X/42fsf
9/MLX/6Hu761ugyMxv+Hzc8dKRp1SvwPTzVETE8zpvyH751YPPg3Mu0/zPRG
z4JGOPM/HCZR+oqlMPs/zNkeZMuckPsf7ghGQUGjef/h5+qT6WTJ1//hK4xx
9RFOBf9h4VrtXzxVhf/h8fvUdC8Zi//D+fL5gru1Sv7DTgsmkBz55j98PJ/b
aH9v6X+Y1uatS7ZQ+X+4QdQ++rB1BXxyZfPzo8ovC/4pVFRUUAnq72uLH2SF
l+nGf2mTXyUgwubjvXjF7LLH2bVOffFVwGO01y1M712ZHdsL33jlalD/eOb2
2LaeMp2bdyNNR6sh2TCx6tPh2TLp+jNJQkE1cCf10/FnEUzlPMJCBcMStSC+
ONBf8ZS/fNVrrSatvRZCn9P7NPgfLu8b6Phs6fQWdoLHqMSocnkNZPeL8b2D
4rufjoyf0i9Pink4OUm8A5/2cg4tb6tyvxXj9TzT99Akdf9UpeuDckt9Gfa7
jHXQebnDZTfjk3LNYk4+6Yw6qDzg7XiLlFAuuWVk/5JmPRyy9ZbIas4vp9yp
kiudqQduKrmJdFRbvtASrXovsgE06yz1LQ3byrsO3bqI5BuBkPhavrRvsLw8
UO0aVW8j2G5kuS6lzZTH/ha0r/H4AOcuGBjT/Kau8FT96+Ut1AS/og0K22ZI
FebJraEqDU1guDv7wmicQIUqXUY8k/VHMAp8OVLHL1ZxwMQrt5H0CbKd7+7L
d5Sv4KgyJAILPkFzWBvn2ZpTFdM7j3zS1GuGaPlTXHFcuhXtrmw9pNVmGCOb
p+s5m1R8t5qxH9VqgbW37YqZtHYVTc+N3RrjW0BvtxTJ28G1orKx0TtjtgXI
To/iOs74VuQuSwcGKn8G4QWjk0shYRXxIq/CrKM+Q4WryuBDpbiK0IuczzVH
P0P+Nx8xrsb0Cu+HrgniCq1w3tA1vb+rsMK+cDiNFNQKR1WvxLGkVVdcHzqf
N93bClc8y5hGTzdV6HFXlbRKtEH7lMQ7W8cvFadPHqx67dkG12bjXO7lDlQo
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
hgqbRnYx7Wsuht/cuTF1TlT48gU3OtfXxdDwNKaS1osKWzmf8PYLL4YUgYA+
CKLCPR9sKHdvF4NPkhPVvSgqnAMy61c1isH0wDXBkngqTGEJkXUQKoYTeedP
zmVQ4aCPWwza/xbBLpkTphJFVJjPaS4g9mMRrJcf8raqosKXtja5/Y0pgu6T
fEmpjVRY0ivAgNGqCErrmd8PtVPh6CdylcMyRRCtufhrVx8VjmdLyiynLgKH
9iFGo1EqzF4865fcUAi6Bq0iT2epcKwaE8e74EKQ6ifUOtaosPzZ4lMyOoXw
v+mciRrXF9cE8m4rhMmxZwEaXNS4rjDMOfhrAXy85Zf5iI8a8/5KH8uJLoDM
RfuP74SpMYtc5Vr0xQLwdzOdoJakxsGB9+iubSkAC9p/AT41zqyaCJBsfQ0q
j5CEizI13jhio7vl8WvYy3nwbJEWNRYqFrmwX+010ETw3J7R3/yedX+RH+1r
GNjBGHbIjBofvjTYfKoiH4i4udc3bahxCK2oxH2HfIgR/tGe7ESNjXRiI0+I
54NrZvP8D09qvFsseCF5OA/0D1dsFQiixkF6vE41sXkgW5IuYxhFjeMnmp1T
LubBVhStFxVPjc0FfEItOPNgrtbHuS2DGv9gCA7bVrc5HqjdecZZRI3NTI4E
vLufC7nNV8rUq6jxBelrdZ7Sm+ODrma3byM1djE2z6vozgHr7wprte3UmNvj
+/7PZ3JA/aooP1UfNT55jyJ/qSIbRIe3wrFRapzbcqzY+VA2MFrTXXGapcal
Uvy8inFZ8HNm2r1gjRp30pQ+bOHKgrdOffFTjDT4DLfAB9mHmZCw3lRzkIsG
84XcvvXkbwa4e5cOWvDRYEemvbUTthlgzJJKlyRMg0UUlFtNf6XDsZAIoQEJ
Gvw8Yt2Dxjgddmz1UtmpQIObanmCv39Jg+Xndtf1lWnwL+4X0evaadApaOwX
oUWDlz/fFHFpSoXCFPW0z/o0eJp/rsxQLRXCxOQa2c1osOiezqacuhS49Vp4
TM2GBvd0POzyOJUC2nIUtodONFht9Id1d30yHCKoN2dQGlxUWXOgQT0Z2JQn
NdYDaTB/pE2bdksS/G7stpGPosGJzrRnXC8kQb12Y7BDPA0m5VZmaPUmQvKX
4tz8DBq8tV4Mt19PBJ9LSZ8nCmlw3hMcyTH7Ckx/hM7sr6LB0S/kPWndX8EJ
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
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0., 5.}, {-0.06821669207947645, 0.09437655044024709}},
         "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListLinePlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 5.}, {-0.06821669207947645, 0.09437655044024709}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.9280803019785566`*^9, {3.9280803482101736`*^9, 3.928080469503703*^9}, {
   3.9280806471787157`*^9, 3.928080673148099*^9}, 3.9280809020525894`*^9, {
   3.9280809459857254`*^9, 3.928080981504495*^9}, {3.928081526587468*^9, 
   3.928081539396049*^9}, {3.9280815707703543`*^9, 3.928081580620073*^9}, 
   3.928142120806408*^9, {3.9281422302715373`*^9, 3.9281422442657137`*^9}, 
   3.9281423095073595`*^9, {3.92814633414616*^9, 3.9281463595800867`*^9}, 
   3.928146396703021*^9, {3.9281464870029244`*^9, 3.9281465592040873`*^9}, {
   3.9281465908548393`*^9, 3.9281466248828545`*^9}, {3.928146751635248*^9, 
   3.9281467777230067`*^9}, 3.928147119218*^9, 3.928147285328065*^9, 
   3.9281474242779007`*^9, 3.9281474719268255`*^9, 3.9282583564678707`*^9, 
   3.9282584050888014`*^9, {3.9282587284226336`*^9, 3.928258734689102*^9}, 
   3.928332194196208*^9, {3.928333323739854*^9, 3.9283333610032253`*^9}, {
   3.92833339767264*^9, 3.9283334748494625`*^9}, 3.928333552694377*^9, {
   3.9283335842291346`*^9, 3.9283336114306045`*^9}, {3.9283336784471855`*^9, 
   3.928333716638735*^9}, {3.928333749859104*^9, 3.9283337838838468`*^9}, 
   3.928335395436968*^9, 3.9283355778818765`*^9, 3.9283356275329113`*^9, {
   3.9283357007104216`*^9, 3.9283357179804378`*^9}, 3.9283357976038237`*^9, 
   3.9283358498723545`*^9, {3.928335924026559*^9, 3.928335932180581*^9}, 
   3.9283360008517885`*^9, 3.9283360461361756`*^9, 3.9283360981642227`*^9, 
   3.9283362235268664`*^9, 3.9283362677268395`*^9, 3.9283365071556983`*^9, {
   3.928336578575721*^9, 3.9283366655708456`*^9}, {3.9283367808560977`*^9, 
   3.928336902519767*^9}, 3.928336956234663*^9},
 CellLabel->
  "Out[1153]=",ExpressionUUID->"ba3b42fb-56ca-4e0b-8aef-3fb7790bb859"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"ModifiedMorse", "[", "r", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0.7", ",", "5"}], "}"}], ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}], ",", "Full"}], "}"}]}]}], 
  "]"}]], "Input",
 CellLabel->
  "In[1154]:=",ExpressionUUID->"eff77ae9-e8c2-45a8-a097-c7f58d44a29f"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
      Slot["HighlightElements"], 
      Slot["LayoutOptions"], 
      Slot["Meta"], 
      Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1: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
             "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0., 10.}, {-1.3358557376125155`, 
           0.7910891535396818}}, "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
          "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
          GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>]]& )[<|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{0., 10.}, {-1.3358557376125155`, 
          0.7910891535396818}}, "Frame" -> {{False, False}, {False, False}}, 
         "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
         "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
         GoldenRatio^(-1), "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>],
     ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
      4.503599627370496*^15, -4.503599627370496*^15}}]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PlotRange" -> {{0., 10.}, {-1.3358557376125155`, 0.7910891535396818}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 10.}, {-1.3358557376125155`, 0.7910891535396818}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Input",
 CellChangeTimes->{{3.934463448618781*^9, 
  3.9344634486817756`*^9}},ExpressionUUID->"1febfb71-6c9f-4806-ba03-\
af9483ae7ea7"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"nufaPlot", ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         SubscriptBox["\[Psi]", "\[ScriptN]\[ScriptL]"], "[", "r", "]"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "0.9", ",", "1.4"}], "}"}], ",", 
       RowBox[{"PlotRange", "->", "Full"}], ",", 
       RowBox[{"PlotStyle", "->", 
        RowBox[{"{", 
         RowBox[{"Red", ",", 
          RowBox[{"Thickness", "[", "0.001", "]"}], ",", "Dashed"}], 
         "}"}]}]}], "]"}], "\[IndentingNewLine]", "fdmPlot"}], ":=", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"rVals", ",", 
          RowBox[{
           FractionBox["1", 
            SqrtBox["step"]], 
           RowBox[{"eigenFunctions", "[", 
            RowBox[{"[", 
             RowBox[{"\[ScriptN]", "+", "1"}], "]"}], "]"}]}]}], "}"}], "]"}],
        ",", " ", 
       RowBox[{"PlotRange", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.9", ",", "1.4"}], "}"}], ",", "Full"}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "->", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", 
          RowBox[{"Thickness", "[", "0.001", "]"}], ",", "Dashed"}], 
         "}"}]}]}], "]"}], "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{"Evaluate", "@", 
       RowBox[{"{", 
        RowBox[{"nufaPlot", ",", "fdmPlot"}], "}"}]}], "]"}]}]}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.928651129073776*^9, 3.928651137805451*^9}, {
  3.9286511690438843`*^9, 3.928651204141779*^9}, {3.9286512673416157`*^9, 
  3.9286512711556606`*^9}, {3.9286513852333064`*^9, 3.9286514675118494`*^9}, {
  3.9348849521498775`*^9, 
  3.934884955744616*^9}},ExpressionUUID->"82361e6c-f911-41e9-824e-\
99fe6cd61fd2"]
}, Open  ]]
},
WindowSize->{574.8, 568.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1. Inherited,
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (July 24, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"f9848e0d-807b-4539-bf87-311e8b536eab"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 2421, 48, 96, "Input",ExpressionUUID->"05046e98-cdd7-4f8a-b695-025eeafee203"],
Cell[CellGroupData[{
Cell[3004, 72, 220, 4, 45, "Subsubsection",ExpressionUUID->"0f08ef51-8ee7-4350-b31c-6f331f5da8c9"],
Cell[CellGroupData[{
Cell[3249, 80, 927, 23, 67, "Input",ExpressionUUID->"4cd66b59-d54b-4adf-8c44-207f63a98815"],
Cell[4179, 105, 44547, 844, 70, "Output",ExpressionUUID->"4b0852f7-3e22-438f-9a7c-99b5aa759b84"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[48775, 955, 313, 5, 37, "Subsubsection",ExpressionUUID->"13089225-7860-498e-aeb0-e76dba1e1b2e"],
Cell[49091, 962, 3721, 73, 202, "Input",ExpressionUUID->"faa084e2-7b85-483b-938a-0df5767655c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52849, 1040, 333, 5, 45, "Subsubsection",ExpressionUUID->"bf0d1a65-e051-4880-8f86-c25c869d336b"],
Cell[53185, 1047, 6604, 160, 557, "Input",ExpressionUUID->"c9744696-f9be-4cf1-9263-aa2904d074f6"]
}, Closed]],
Cell[CellGroupData[{
Cell[59826, 1212, 335, 5, 37, "Subsubsection",ExpressionUUID->"21f7d04c-37a1-4426-b520-01eb62a7d727"],
Cell[CellGroupData[{
Cell[60186, 1221, 1755, 33, 28, "Input",ExpressionUUID->"b45c0b8c-d633-41f2-839e-ef7421e2130e"],
Cell[61944, 1256, 2958, 65, 78, "Output",ExpressionUUID->"34c832ce-8f74-4c92-a03e-3614a09570ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64939, 1326, 1108, 24, 48, "Input",ExpressionUUID->"b80852a0-65e2-409f-b484-3c4a94e633a5"],
Cell[66050, 1352, 134119, 2254, 222, "Output",ExpressionUUID->"ba3b42fb-56ca-4e0b-8aef-3fb7790bb859"]
}, Open  ]],
Cell[200184, 3609, 422, 13, 28, "Input",ExpressionUUID->"eff77ae9-e8c2-45a8-a097-c7f58d44a29f"],
Cell[200609, 3624, 34619, 608, 219, "Input",ExpressionUUID->"1febfb71-6c9f-4806-ba03-af9483ae7ea7"],
Cell[235231, 4234, 1908, 52, 182, "Input",ExpressionUUID->"82361e6c-f911-41e9-824e-99fe6cd61fd2"]
}, Open  ]]
}
]
*)

